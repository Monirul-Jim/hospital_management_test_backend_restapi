[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppointmentModel",
        "importPath": "appointment.models",
        "description": "appointment.models",
        "isExtraImport": true,
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "AppointmentModel",
        "importPath": "appointment.models",
        "description": "appointment.models",
        "isExtraImport": true,
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "AppointmentModel",
        "importPath": "appointment.models",
        "description": "appointment.models",
        "isExtraImport": true,
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "EmailMultiAlternatives",
        "importPath": "django.core.mail",
        "description": "django.core.mail",
        "isExtraImport": true,
        "detail": "django.core.mail",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "render_to_string",
        "importPath": "django.template.loader",
        "description": "django.template.loader",
        "isExtraImport": true,
        "detail": "django.template.loader",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "PatientModel",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "PatientModel",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "PatientModel",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "PatientModel",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "PatientModel",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "PatientModel",
        "importPath": "patient.models",
        "description": "patient.models",
        "isExtraImport": true,
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTime",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorModel",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTime",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorModel",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorModel",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTime",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorModel",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTime",
        "importPath": "doctor.models",
        "description": "doctor.models",
        "isExtraImport": true,
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "pagination",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "filters",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "AppointmentViewSet",
        "importPath": "appointment.views",
        "description": "appointment.views",
        "isExtraImport": true,
        "detail": "appointment.views",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "resolve",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "AppointmentSerializers",
        "importPath": "appointment.serializers",
        "description": "appointment.serializers",
        "isExtraImport": true,
        "detail": "appointment.serializers",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "BasePermission",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "BasePermission",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticatedOrReadOnly",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "ContactModel",
        "importPath": "contact_us.models",
        "description": "contact_us.models",
        "isExtraImport": true,
        "detail": "contact_us.models",
        "documentation": {}
    },
    {
        "label": "ContactModel",
        "importPath": "contact_us.models",
        "description": "contact_us.models",
        "isExtraImport": true,
        "detail": "contact_us.models",
        "documentation": {}
    },
    {
        "label": "ContactModel",
        "importPath": "contact_us.models",
        "description": "contact_us.models",
        "isExtraImport": true,
        "detail": "contact_us.models",
        "documentation": {}
    },
    {
        "label": "ContactUsViewSet",
        "importPath": "contact_us.views",
        "description": "contact_us.views",
        "isExtraImport": true,
        "detail": "contact_us.views",
        "documentation": {}
    },
    {
        "label": "ContactUsSerializers",
        "importPath": "contact_us.serializers",
        "description": "contact_us.serializers",
        "isExtraImport": true,
        "detail": "contact_us.serializers",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "DoctorViewSet",
        "importPath": "doctor.views",
        "description": "doctor.views",
        "isExtraImport": true,
        "detail": "doctor.views",
        "documentation": {}
    },
    {
        "label": "DoctorSerializers",
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "isExtraImport": true,
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTimeSerializers",
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "isExtraImport": true,
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "environ",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "environ",
        "description": "environ",
        "detail": "environ",
        "documentation": {}
    },
    {
        "label": "custom_not_found_page",
        "importPath": "common.utils",
        "description": "common.utils",
        "isExtraImport": true,
        "detail": "common.utils",
        "documentation": {}
    },
    {
        "label": "custom_server_error_page",
        "importPath": "common.utils",
        "description": "common.utils",
        "isExtraImport": true,
        "detail": "common.utils",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "MiddlewareMixin",
        "importPath": "django.utils.deprecation",
        "description": "django.utils.deprecation",
        "isExtraImport": true,
        "detail": "django.utils.deprecation",
        "documentation": {}
    },
    {
        "label": "activate",
        "importPath": "patient.views",
        "description": "patient.views",
        "isExtraImport": true,
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "PatientViewSets",
        "importPath": "patient.views",
        "description": "patient.views",
        "isExtraImport": true,
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "UserLoginApiView",
        "importPath": "patient.views",
        "description": "patient.views",
        "isExtraImport": true,
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "UserRegistrationViews",
        "importPath": "patient.views",
        "description": "patient.views",
        "isExtraImport": true,
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "UserLogoutView",
        "importPath": "patient.views",
        "description": "patient.views",
        "isExtraImport": true,
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "PatientSerializers",
        "importPath": "patient.serializers",
        "description": "patient.serializers",
        "isExtraImport": true,
        "detail": "patient.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializers",
        "importPath": "patient.serializers",
        "description": "patient.serializers",
        "isExtraImport": true,
        "detail": "patient.serializers",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializers",
        "importPath": "patient.serializers",
        "description": "patient.serializers",
        "isExtraImport": true,
        "detail": "patient.serializers",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "default_token_generator",
        "importPath": "django.contrib.auth.tokens",
        "description": "django.contrib.auth.tokens",
        "isExtraImport": true,
        "detail": "django.contrib.auth.tokens",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_encode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "urlsafe_base64_decode",
        "importPath": "django.utils.http",
        "description": "django.utils.http",
        "isExtraImport": true,
        "detail": "django.utils.http",
        "documentation": {}
    },
    {
        "label": "force_bytes",
        "importPath": "django.utils.encoding",
        "description": "django.utils.encoding",
        "isExtraImport": true,
        "detail": "django.utils.encoding",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "ServiceModels",
        "importPath": "service.models",
        "description": "service.models",
        "isExtraImport": true,
        "detail": "service.models",
        "documentation": {}
    },
    {
        "label": "ServiceModels",
        "importPath": "service.models",
        "description": "service.models",
        "isExtraImport": true,
        "detail": "service.models",
        "documentation": {}
    },
    {
        "label": "ServiceModels",
        "importPath": "service.models",
        "description": "service.models",
        "isExtraImport": true,
        "detail": "service.models",
        "documentation": {}
    },
    {
        "label": "ServicesViewSet",
        "importPath": "service.views",
        "description": "service.views",
        "isExtraImport": true,
        "detail": "service.views",
        "documentation": {}
    },
    {
        "label": "ServiceSerializer",
        "importPath": "service.serializers",
        "description": "service.serializers",
        "isExtraImport": true,
        "detail": "service.serializers",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "appointment.migrations.0001_initial",
        "description": "appointment.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('doctor', '0004_alter_reviewmodel_rating'),\n        ('patient', '0002_alter_patientmodel_options_alter_patientmodel_user'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AppointmentModel',\n            fields=[",
        "detail": "appointment.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "appointment.migrations.0002_alter_appointmentmodel_time",
        "description": "appointment.migrations.0002_alter_appointmentmodel_time",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('appointment', '0001_initial'),\n        ('doctor', '0004_alter_reviewmodel_rating'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='appointmentmodel',\n            name='time',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='doctor.doctoravailabletime'),",
        "detail": "appointment.migrations.0002_alter_appointmentmodel_time",
        "documentation": {}
    },
    {
        "label": "AppointmentAdmin",
        "kind": 6,
        "importPath": "appointment.admin",
        "description": "appointment.admin",
        "peekOfCode": "class AppointmentAdmin(admin.ModelAdmin):\n    list_display=['doctor_name','patient_name','appointment_types','appointment_status','symptoms','time','cancel']\n    def patient_name(self,obj):\n        return obj.patient.user.first_name\n    def doctor_name(self,obj):\n        return obj.doctor.name.first_name\n    def save_model(self,request,obj,form,change):\n        obj.save()\n        if obj.appointment_status == 'Running' and obj.appointment_types == 'Online':\n            email_subject = 'Meeting With Your Doctor'",
        "detail": "appointment.admin",
        "documentation": {}
    },
    {
        "label": "AppointmentConfig",
        "kind": 6,
        "importPath": "appointment.apps",
        "description": "appointment.apps",
        "peekOfCode": "class AppointmentConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'appointment'",
        "detail": "appointment.apps",
        "documentation": {}
    },
    {
        "label": "AppointmentModel",
        "kind": 6,
        "importPath": "appointment.models",
        "description": "appointment.models",
        "peekOfCode": "class AppointmentModel(models.Model):\n    patient = models.ForeignKey(PatientModel, on_delete=models.CASCADE)\n    doctor = models.ForeignKey(DoctorModel, on_delete=models.CASCADE)\n    appointment_types=models.CharField(choices=APPOINTMENT_TYPES, max_length=10)\n    appointment_status=models.CharField(choices=APPOINTMENT_STATUS, max_length=10,default='Pending')\n    symptoms=models.TextField()\n    time=models.ForeignKey(DoctorAvailableTime,on_delete=models.CASCADE)\n    cancel=models.BooleanField(default=False)\n    def __str__(self) :\n        return f'Doctor: {self.doctor.name.first_name}, Patient: {self.patient.user.first_name}'",
        "detail": "appointment.models",
        "documentation": {}
    },
    {
        "label": "AppointmentSerializers",
        "kind": 6,
        "importPath": "appointment.serializers",
        "description": "appointment.serializers",
        "peekOfCode": "class AppointmentSerializers(serializers.ModelSerializer):\n    patient = serializers.PrimaryKeyRelatedField(queryset=PatientModel.objects.all())\n    doctor = serializers.PrimaryKeyRelatedField(queryset=DoctorModel.objects.all())\n    time = serializers.PrimaryKeyRelatedField(queryset=DoctorAvailableTime.objects.all())\n    # patient=serializers.StringRelatedField(many=False)\n    # doctor=serializers.StringRelatedField(many=False)\n    # time=serializers.StringRelatedField(many=False)\n    class Meta:\n        model = AppointmentModel\n        fields = '__all__'",
        "detail": "appointment.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "appointment.urls",
        "description": "appointment.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register('appointment', AppointmentViewSet)\nurlpatterns=[\n    path('appointments/',include(router.urls))\n]",
        "detail": "appointment.urls",
        "documentation": {}
    },
    {
        "label": "AppointmentPagination",
        "kind": 6,
        "importPath": "appointment.views",
        "description": "appointment.views",
        "peekOfCode": "class AppointmentPagination(pagination.PageNumberPagination):\n    page_size = 3\n    page_size_query_param = 'page_size'\n    max_page_size = 100\nclass AppointmentViewSet(viewsets.ModelViewSet):\n    queryset = AppointmentModel.objects.all()\n    serializer_class = AppointmentSerializers\n    pagination_class = AppointmentPagination\n    # custom query\n    def get_queryset(self):",
        "detail": "appointment.views",
        "documentation": {}
    },
    {
        "label": "AppointmentViewSet",
        "kind": 6,
        "importPath": "appointment.views",
        "description": "appointment.views",
        "peekOfCode": "class AppointmentViewSet(viewsets.ModelViewSet):\n    queryset = AppointmentModel.objects.all()\n    serializer_class = AppointmentSerializers\n    pagination_class = AppointmentPagination\n    # custom query\n    def get_queryset(self):\n        queryset = super().get_queryset()\n        patient_id = self.request.query_params.get('patient_id')\n        if patient_id:\n            queryset = queryset.filter(patient_id = patient_id)",
        "detail": "appointment.views",
        "documentation": {}
    },
    {
        "label": "CommonConfig",
        "kind": 6,
        "importPath": "common.apps",
        "description": "common.apps",
        "peekOfCode": "class CommonConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'common'",
        "detail": "common.apps",
        "documentation": {}
    },
    {
        "label": "IsAuthenticatedCustom",
        "kind": 6,
        "importPath": "common.permissions",
        "description": "common.permissions",
        "peekOfCode": "class IsAuthenticatedCustom(BasePermission):\n    message={\n        \"success\":False,\n        \"message\":'unauthorize',\n        \"errorSources\":[\n          {  \n           \"path\":\"\",\n           \"message\":\"unauthorize\"\n           }\n        ],",
        "detail": "common.permissions",
        "documentation": {}
    },
    {
        "label": "custom_not_found_page",
        "kind": 2,
        "importPath": "common.utils",
        "description": "common.utils",
        "peekOfCode": "def custom_not_found_page(request, exception=None):\n    response = {\n        \"success\": False,\n        \"message\": \"API Not Found !!\",\n        \"error\": \"\",\n    }\n    return JsonResponse(response, status=status.HTTP_404_NOT_FOUND)\n# Custom 500 handler\ndef custom_server_error_page(request):\n    response = {",
        "detail": "common.utils",
        "documentation": {}
    },
    {
        "label": "custom_server_error_page",
        "kind": 2,
        "importPath": "common.utils",
        "description": "common.utils",
        "peekOfCode": "def custom_server_error_page(request):\n    response = {\n        \"success\": False,\n        \"message\": \"Server Error !!\",\n        \"error\": \"\",\n    }\n    return JsonResponse(response, status=status.HTTP_500_INTERNAL_SERVER_ERROR)",
        "detail": "common.utils",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact_us.migrations.0001_initial",
        "description": "contact_us.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ContactModel',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=30)),",
        "detail": "contact_us.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "contact_us.migrations.0002_alter_contactmodel_options",
        "description": "contact_us.migrations.0002_alter_contactmodel_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('contact_us', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='contactmodel',\n            options={'verbose_name_plural': 'Contact Us'},\n        ),\n    ]",
        "detail": "contact_us.migrations.0002_alter_contactmodel_options",
        "documentation": {}
    },
    {
        "label": "ContactModelAdmin",
        "kind": 6,
        "importPath": "contact_us.admin",
        "description": "contact_us.admin",
        "peekOfCode": "class ContactModelAdmin(admin.ModelAdmin):\n    list_display=['name','phone','phone']\nadmin.site.register(ContactModel,ContactModelAdmin)",
        "detail": "contact_us.admin",
        "documentation": {}
    },
    {
        "label": "ContactUsConfig",
        "kind": 6,
        "importPath": "contact_us.apps",
        "description": "contact_us.apps",
        "peekOfCode": "class ContactUsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'contact_us'",
        "detail": "contact_us.apps",
        "documentation": {}
    },
    {
        "label": "ContactModel",
        "kind": 6,
        "importPath": "contact_us.models",
        "description": "contact_us.models",
        "peekOfCode": "class ContactModel(models.Model):\n    name=models.CharField(max_length=30)\n    phone=models.CharField(max_length=12)\n    problem=models.TextField()\n    def __str__(self):\n        return self.name\n    class Meta:\n        verbose_name_plural='Contact Us'",
        "detail": "contact_us.models",
        "documentation": {}
    },
    {
        "label": "ContactUsSerializers",
        "kind": 6,
        "importPath": "contact_us.serializers",
        "description": "contact_us.serializers",
        "peekOfCode": "class ContactUsSerializers(serializers.ModelSerializer):\n    class Meta:\n        model=ContactModel\n        fields='__all__'",
        "detail": "contact_us.serializers",
        "documentation": {}
    },
    {
        "label": "ContactUsViewSet",
        "kind": 6,
        "importPath": "contact_us.views",
        "description": "contact_us.views",
        "peekOfCode": "class ContactUsViewSet(viewsets.ModelViewSet):\n    queryset=ContactModel.objects.all()\n    serializer_class=ContactUsSerializers",
        "detail": "contact_us.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0001_initial",
        "description": "doctor.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='DoctorAvailableTime',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "doctor.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0002_remove_doctormodel_available_time_and_more",
        "description": "doctor.migrations.0002_remove_doctormodel_available_time_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='doctormodel',\n            name='available_time',\n        ),\n        migrations.AddField(",
        "detail": "doctor.migrations.0002_remove_doctormodel_available_time_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0003_reviewmodel",
        "description": "doctor.migrations.0003_reviewmodel",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0002_remove_doctormodel_available_time_and_more'),\n        ('patient', '0002_alter_patientmodel_options_alter_patientmodel_user'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ReviewModel',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "doctor.migrations.0003_reviewmodel",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "doctor.migrations.0004_alter_reviewmodel_rating",
        "description": "doctor.migrations.0004_alter_reviewmodel_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('doctor', '0003_reviewmodel'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='reviewmodel',\n            name='rating',\n            field=models.CharField(choices=[('⭐', '⭐'), ('⭐ ⭐ ', '⭐ ⭐'), ('⭐ ⭐ ⭐', '⭐ ⭐ ⭐'), ('⭐ ⭐ ⭐ ⭐', '⭐ ⭐ ⭐ ⭐'), ('⭐ ⭐ ⭐ ⭐ ⭐', '⭐ ⭐ ⭐ ⭐ ⭐')], max_length=10),\n        ),",
        "detail": "doctor.migrations.0004_alter_reviewmodel_rating",
        "documentation": {}
    },
    {
        "label": "DoctorSpecializationAdmin",
        "kind": 6,
        "importPath": "doctor.admin",
        "description": "doctor.admin",
        "peekOfCode": "class DoctorSpecializationAdmin(admin.ModelAdmin):\n    prepopulated_fields={'slug': ['name',]}\nclass DoctorDesignationAdmin(admin.ModelAdmin):\n    prepopulated_fields={'slug': ['name',]}\nadmin.site.register(models.DoctorSpecialization,DoctorSpecializationAdmin)\nadmin.site.register(models.DoctorDesignation,DoctorDesignationAdmin)\nadmin.site.register(models.DoctorAvailableTime)\nadmin.site.register(models.DoctorModel)\nadmin.site.register(models.ReviewModel)",
        "detail": "doctor.admin",
        "documentation": {}
    },
    {
        "label": "DoctorDesignationAdmin",
        "kind": 6,
        "importPath": "doctor.admin",
        "description": "doctor.admin",
        "peekOfCode": "class DoctorDesignationAdmin(admin.ModelAdmin):\n    prepopulated_fields={'slug': ['name',]}\nadmin.site.register(models.DoctorSpecialization,DoctorSpecializationAdmin)\nadmin.site.register(models.DoctorDesignation,DoctorDesignationAdmin)\nadmin.site.register(models.DoctorAvailableTime)\nadmin.site.register(models.DoctorModel)\nadmin.site.register(models.ReviewModel)",
        "detail": "doctor.admin",
        "documentation": {}
    },
    {
        "label": "DoctorConfig",
        "kind": 6,
        "importPath": "doctor.apps",
        "description": "doctor.apps",
        "peekOfCode": "class DoctorConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'doctor'",
        "detail": "doctor.apps",
        "documentation": {}
    },
    {
        "label": "DoctorSpecialization",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class DoctorSpecialization(models.Model):\n    name=models.CharField(max_length=30)\n    slug=models.SlugField(max_length=30)\n    def __str__(self):\n        return self.name\nclass DoctorDesignation(models.Model):\n    name=models.CharField(max_length=30)\n    slug=models.SlugField(max_length=30)\n    def __str__(self):\n        return self.name",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorDesignation",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class DoctorDesignation(models.Model):\n    name=models.CharField(max_length=30)\n    slug=models.SlugField(max_length=30)\n    def __str__(self):\n        return self.name\nclass DoctorAvailableTime(models.Model):\n    name=models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\nclass DoctorModel(models.Model):",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTime",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class DoctorAvailableTime(models.Model):\n    name=models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\nclass DoctorModel(models.Model):\n    name=models.OneToOneField(User,on_delete=models.CASCADE)\n    image=models.ImageField(upload_to='doctor/image')\n    designation=models.ManyToManyField(DoctorDesignation)\n    specialization=models.ManyToManyField(DoctorSpecialization)\n    available_time=models.ManyToManyField(DoctorAvailableTime)",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorModel",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class DoctorModel(models.Model):\n    name=models.OneToOneField(User,on_delete=models.CASCADE)\n    image=models.ImageField(upload_to='doctor/image')\n    designation=models.ManyToManyField(DoctorDesignation)\n    specialization=models.ManyToManyField(DoctorSpecialization)\n    available_time=models.ManyToManyField(DoctorAvailableTime)\n    fee=models.IntegerField()\n    meet_link=models.CharField(max_length=100)\n    def __str__(self):\n        return f' {self.name.first_name} {self.name.last_name}'",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "ReviewModel",
        "kind": 6,
        "importPath": "doctor.models",
        "description": "doctor.models",
        "peekOfCode": "class ReviewModel(models.Model):\n    reviewer=models.ForeignKey(PatientModel,on_delete=models.CASCADE)\n    doctor=models.ForeignKey(DoctorModel,on_delete=models.CASCADE)\n    body=models.TextField()\n    created=models.DateTimeField(auto_now_add=True)\n    rating=models.CharField(max_length=10,choices=STAR_CHOICES)\n    def __str__(self):\n        return f' Patient {self.reviewer.user.first_name}; Doctor : {self.doctor.name.first_name}'",
        "detail": "doctor.models",
        "documentation": {}
    },
    {
        "label": "DoctorSerializers",
        "kind": 6,
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "peekOfCode": "class DoctorSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = DoctorModel\n        fields = '__all__'\nclass DoctorAvailableTimeSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = DoctorAvailableTime\n        fields = '__all__'",
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTimeSerializers",
        "kind": 6,
        "importPath": "doctor.serializers",
        "description": "doctor.serializers",
        "peekOfCode": "class DoctorAvailableTimeSerializers(serializers.ModelSerializer):\n    class Meta:\n        model = DoctorAvailableTime\n        fields = '__all__'",
        "detail": "doctor.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "doctor.urls",
        "description": "doctor.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register('doctor',DoctorViewSet)\nurlpatterns=[\n    path('doctors/',include(router.urls)),\n    path('available-time/',include(router.urls))\n]",
        "detail": "doctor.urls",
        "documentation": {}
    },
    {
        "label": "AvailableTimeForSpecificDoctor",
        "kind": 6,
        "importPath": "doctor.views",
        "description": "doctor.views",
        "peekOfCode": "class AvailableTimeForSpecificDoctor(filters.BaseFilterBackend):\n    def filter_query_set(self,request,query_set,view):\n        doctor_id = request.query_params.get('doctor_id')\n        if doctor_id:\n            return query_set.filter(doctor = doctor_id)\n        return query_set\nclass DoctorAvailableTimeViewSet(viewsets.ModelViewSet):\n    queryset = DoctorAvailableTime.objects.all()\n    serializer_class = DoctorAvailableTimeSerializers\n    filter_backends = [AvailableTimeForSpecificDoctor]",
        "detail": "doctor.views",
        "documentation": {}
    },
    {
        "label": "DoctorAvailableTimeViewSet",
        "kind": 6,
        "importPath": "doctor.views",
        "description": "doctor.views",
        "peekOfCode": "class DoctorAvailableTimeViewSet(viewsets.ModelViewSet):\n    queryset = DoctorAvailableTime.objects.all()\n    serializer_class = DoctorAvailableTimeSerializers\n    filter_backends = [AvailableTimeForSpecificDoctor]\nclass DoctorViewSet(viewsets.ModelViewSet):\n    queryset = DoctorModel.objects.all()\n    serializer_class = DoctorSerializers\n    permission_classes=[IsAuthenticatedOrReadOnly]\n    # permission_classes=[IsAuthenticated]\n    # permission_classes=[IsAuthenticatedCustom]",
        "detail": "doctor.views",
        "documentation": {}
    },
    {
        "label": "DoctorViewSet",
        "kind": 6,
        "importPath": "doctor.views",
        "description": "doctor.views",
        "peekOfCode": "class DoctorViewSet(viewsets.ModelViewSet):\n    queryset = DoctorModel.objects.all()\n    serializer_class = DoctorSerializers\n    permission_classes=[IsAuthenticatedOrReadOnly]\n    # permission_classes=[IsAuthenticated]\n    # permission_classes=[IsAuthenticatedCustom]",
        "detail": "doctor.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "hospital_management_backend.asgi",
        "description": "hospital_management_backend.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "hospital_management_backend.asgi",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "env = environ.Env()\nenviron.Env.read_env()\n# Build paths inside the project like this: BASE_DIR / 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent\n# environ.Env.read_env(os.path.join(BASE_DIR,'env'))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-!ru!_g+rmyl!=rxx3g!mf4xavok519j(-h_yvah=wg76#j%r-='\n# SECURITY WARNING: don't run with debug turned on in production!",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# environ.Env.read_env(os.path.join(BASE_DIR,'env'))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-!ru!_g+rmyl!=rxx3g!mf4xavok519j(-h_yvah=wg76#j%r-='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-!ru!_g+rmyl!=rxx3g!mf4xavok519j(-h_yvah=wg76#j%r-='\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'rest_framework',\n    'rest_framework.authtoken',\n    'django_filters',",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    # 'middleware_app.middleware.IsAuthenticatedCustomMiddleware',\n]",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "ROOT_URLCONF = 'hospital_management_backend.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "WSGI_APPLICATION = 'hospital_management_backend.wsgi.application'\nREST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',\n    ]\n}\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.IsAuthenticated',\n    ]\n}\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\n# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\n# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n# EMAIL_HOST = 'smtp.gmail.com'",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\n# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n# EMAIL_HOST = 'smtp.gmail.com'\n# EMAIL_USE_TLS = True\n# EMAIL_PORT = 587\n# EMAIL_HOST_USER = env('EMAIL')",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nMEDIA_URL = '/media/'\n# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n# EMAIL_HOST = 'smtp.gmail.com'\n# EMAIL_USE_TLS = True\n# EMAIL_PORT = 587\n# EMAIL_HOST_USER = env('EMAIL')\n# EMAIL_HOST_PASSWORD = env('EMAIL_PASSWORD')\n#gmail_send/settings.py\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\n# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\n# EMAIL_HOST = 'smtp.gmail.com'\n# EMAIL_USE_TLS = True\n# EMAIL_PORT = 587\n# EMAIL_HOST_USER = env('EMAIL')\n# EMAIL_HOST_PASSWORD = env('EMAIL_PASSWORD')\n#gmail_send/settings.py\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_HOST_USER = env('USER_NAME')\nEMAIL_HOST_PASSWORD = env('USER_PASSWORD')\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_HOST_USER = env('USER_NAME')\nEMAIL_HOST_PASSWORD = env('USER_PASSWORD')\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "EMAIL_HOST_USER = env('USER_NAME')\nEMAIL_HOST_PASSWORD = env('USER_PASSWORD')\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = env('USER_PASSWORD')\nEMAIL_PORT = 587\nEMAIL_USE_TLS = True",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_USE_TLS = True",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "hospital_management_backend.settings",
        "description": "hospital_management_backend.settings",
        "peekOfCode": "EMAIL_USE_TLS = True",
        "detail": "hospital_management_backend.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "hospital_management_backend.urls",
        "description": "hospital_management_backend.urls",
        "peekOfCode": "urlpatterns = [\n  path('admin/', admin.site.urls),\n  path('contact/', include('contact_us.urls')),\n  path('service/', include('service.urls')),\n  path('patient/', include('patient.urls')),\n  path('appointment/', include('appointment.urls')),\n  path('doctor/', include('doctor.urls')),\n    # ... other URL patterns here\n]\nhandler404 = 'common.utils.custom_not_found_page'",
        "detail": "hospital_management_backend.urls",
        "documentation": {}
    },
    {
        "label": "handler404",
        "kind": 5,
        "importPath": "hospital_management_backend.urls",
        "description": "hospital_management_backend.urls",
        "peekOfCode": "handler404 = 'common.utils.custom_not_found_page'\nhandler500 = 'common.utils.custom_server_error_page'\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "hospital_management_backend.urls",
        "documentation": {}
    },
    {
        "label": "handler500",
        "kind": 5,
        "importPath": "hospital_management_backend.urls",
        "description": "hospital_management_backend.urls",
        "peekOfCode": "handler500 = 'common.utils.custom_server_error_page'\nurlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)",
        "detail": "hospital_management_backend.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "hospital_management_backend.wsgi",
        "description": "hospital_management_backend.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "hospital_management_backend.wsgi",
        "documentation": {}
    },
    {
        "label": "MiddlewareAppConfig",
        "kind": 6,
        "importPath": "middleware_app.apps",
        "description": "middleware_app.apps",
        "peekOfCode": "class MiddlewareAppConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'middleware_app'",
        "detail": "middleware_app.apps",
        "documentation": {}
    },
    {
        "label": "IsAuthenticatedCustomMiddleware",
        "kind": 6,
        "importPath": "middleware_app.middleware",
        "description": "middleware_app.middleware",
        "peekOfCode": "class IsAuthenticatedCustomMiddleware(MiddlewareMixin):\n    custom_message = {\n        \"success\": False,\n        \"message\": 'unauthorize',\n        \"errorSources\": [\n            {\n                \"path\": \"\",\n                \"message\": \"unauthorize\"\n            }\n        ],",
        "detail": "middleware_app.middleware",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "patient.migrations.0001_initial",
        "description": "patient.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='PatientModel',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "patient.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "patient.migrations.0002_alter_patientmodel_options_alter_patientmodel_user",
        "description": "patient.migrations.0002_alter_patientmodel_options_alter_patientmodel_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('patient', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='patientmodel',\n            options={'verbose_name_plural': 'Patient'},\n        ),",
        "detail": "patient.migrations.0002_alter_patientmodel_options_alter_patientmodel_user",
        "documentation": {}
    },
    {
        "label": "PatientAdmin",
        "kind": 6,
        "importPath": "patient.admin",
        "description": "patient.admin",
        "peekOfCode": "class PatientAdmin(admin.ModelAdmin):\n    list_display=['first_name','last_name','mobile_no','image']\n    def first_name(self,obj):\n        return obj.user.first_name\n    def last_name(self,obj):\n        return obj.user.last_name\nadmin.site.register(PatientModel,PatientAdmin)",
        "detail": "patient.admin",
        "documentation": {}
    },
    {
        "label": "PatientConfig",
        "kind": 6,
        "importPath": "patient.apps",
        "description": "patient.apps",
        "peekOfCode": "class PatientConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'patient'",
        "detail": "patient.apps",
        "documentation": {}
    },
    {
        "label": "PatientModel",
        "kind": 6,
        "importPath": "patient.models",
        "description": "patient.models",
        "peekOfCode": "class PatientModel(models.Model):\n    user=models.OneToOneField(User,on_delete=models.CASCADE)\n    image=models.ImageField(upload_to='patient/images/')\n    mobile_no=models.CharField(max_length=12)\n    def __str__(self):\n        return f'{self.user.first_name} {self.user.last_name}'\n    class Meta:\n        verbose_name_plural='Patient'",
        "detail": "patient.models",
        "documentation": {}
    },
    {
        "label": "PatientSerializers",
        "kind": 6,
        "importPath": "patient.serializers",
        "description": "patient.serializers",
        "peekOfCode": "class PatientSerializers(serializers.ModelSerializer):\n    user=serializers.StringRelatedField(many=False)\n    class Meta:\n        model = PatientModel\n        fields = '__all__'\nclass UserRegistrationSerializers(serializers.ModelSerializer):\n    confirm_password = serializers.CharField(required = True)\n    class Meta:\n        model = User\n        fields = ['username','first_name','last_name','email','password','confirm_password']",
        "detail": "patient.serializers",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializers",
        "kind": 6,
        "importPath": "patient.serializers",
        "description": "patient.serializers",
        "peekOfCode": "class UserRegistrationSerializers(serializers.ModelSerializer):\n    confirm_password = serializers.CharField(required = True)\n    class Meta:\n        model = User\n        fields = ['username','first_name','last_name','email','password','confirm_password']\n    def save(self):\n        username= self.validated_data['username']\n        first_name= self.validated_data['first_name']\n        last_name= self.validated_data['last_name']\n        email= self.validated_data['email']",
        "detail": "patient.serializers",
        "documentation": {}
    },
    {
        "label": "UserLoginSerializers",
        "kind": 6,
        "importPath": "patient.serializers",
        "description": "patient.serializers",
        "peekOfCode": "class UserLoginSerializers(serializers.Serializer):\n    username = serializers.CharField(required= True)\n    password = serializers.CharField(required= True)",
        "detail": "patient.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "patient.urls",
        "description": "patient.urls",
        "peekOfCode": "router = DefaultRouter()\nrouter.register('patient', PatientViewSets)\nurlpatterns=[\n    path('patients/',include(router.urls)),\n    path('register/', UserRegistrationViews.as_view(), name='register'),\n    path('login/', UserLoginApiView.as_view(), name='login'),\n    path('logout/', UserLogoutView.as_view(), name='logout'),\n    path('active/<uid64>/<token>/',activate, name='activate'),\n]",
        "detail": "patient.urls",
        "documentation": {}
    },
    {
        "label": "PatientViewSets",
        "kind": 6,
        "importPath": "patient.views",
        "description": "patient.views",
        "peekOfCode": "class PatientViewSets(viewsets.ModelViewSet):\n    queryset=PatientModel.objects.all()\n    serializer_class= PatientSerializers\nclass UserRegistrationViews(APIView):\n    serializer_class = UserRegistrationSerializers\n    def post(self,request):\n        serializer = self.serializer_class(data =  request.data)\n        if serializer.is_valid():\n            user =serializer.save()\n            token = default_token_generator.make_token(user)",
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "UserRegistrationViews",
        "kind": 6,
        "importPath": "patient.views",
        "description": "patient.views",
        "peekOfCode": "class UserRegistrationViews(APIView):\n    serializer_class = UserRegistrationSerializers\n    def post(self,request):\n        serializer = self.serializer_class(data =  request.data)\n        if serializer.is_valid():\n            user =serializer.save()\n            token = default_token_generator.make_token(user)\n            print('Token =',token)\n            uid = urlsafe_base64_encode(force_bytes(user.pk))\n            print('Uid',uid)",
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "UserLoginApiView",
        "kind": 6,
        "importPath": "patient.views",
        "description": "patient.views",
        "peekOfCode": "class UserLoginApiView(APIView):\n    def post(self,request):\n        serializer = UserLoginSerializers(data =self.request.data)\n        if serializer.is_valid():\n            username = serializer.validated_data['username']\n            password = serializer.validated_data['password']\n            user =authenticate(username = username, password = password)\n            if user:\n                token , _ = Token.objects.get_or_create(user = user)\n                login(request,user)",
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "UserLogoutView",
        "kind": 6,
        "importPath": "patient.views",
        "description": "patient.views",
        "peekOfCode": "class UserLogoutView(APIView):\n     def get(self, request):\n         request.user.auth_token.delete()\n         logout(request) \n         return redirect('login')",
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "activate",
        "kind": 2,
        "importPath": "patient.views",
        "description": "patient.views",
        "peekOfCode": "def activate(request, uid64,token):\n    try:\n        uid=urlsafe_base64_decode(uid64).decode()\n        user = User._default_manager.get(pk = uid)\n    except(User.DoesNotExists):\n        user = None\n    if user is not None and default_token_generator.check_token(user, token):\n        user.is_active = True\n        user.save()\n        return redirect('login')",
        "detail": "patient.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "service.migrations.0001_initial",
        "description": "service.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='ServiceModels',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=20)),",
        "detail": "service.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "service.migrations.0002_alter_servicemodels_options",
        "description": "service.migrations.0002_alter_servicemodels_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('service', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='servicemodels',\n            options={'verbose_name_plural': 'Service'},\n        ),\n    ]",
        "detail": "service.migrations.0002_alter_servicemodels_options",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "service.migrations.0003_alter_servicemodels_image",
        "description": "service.migrations.0003_alter_servicemodels_image",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('service', '0002_alter_servicemodels_options'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='servicemodels',\n            name='image',\n            field=models.ImageField(upload_to='service/images/'),\n        ),",
        "detail": "service.migrations.0003_alter_servicemodels_image",
        "documentation": {}
    },
    {
        "label": "ServiceConfig",
        "kind": 6,
        "importPath": "service.apps",
        "description": "service.apps",
        "peekOfCode": "class ServiceConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'service'",
        "detail": "service.apps",
        "documentation": {}
    },
    {
        "label": "ServiceModels",
        "kind": 6,
        "importPath": "service.models",
        "description": "service.models",
        "peekOfCode": "class ServiceModels(models.Model):\n    name=models.CharField(max_length=20)\n    description=models.TextField()\n    image=models.ImageField(upload_to='service/images/')\n    def __str__(self):\n        return self.name\n    class Meta:\n        verbose_name_plural='Service'",
        "detail": "service.models",
        "documentation": {}
    },
    {
        "label": "ServiceSerializer",
        "kind": 6,
        "importPath": "service.serializers",
        "description": "service.serializers",
        "peekOfCode": "class ServiceSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = ServiceModels\n        fields = '__all__'",
        "detail": "service.serializers",
        "documentation": {}
    },
    {
        "label": "ServicesViewSet",
        "kind": 6,
        "importPath": "service.views",
        "description": "service.views",
        "peekOfCode": "class ServicesViewSet(viewsets.ModelViewSet):\n    queryset=ServiceModels.objects.all()\n    serializer_class= ServiceSerializer",
        "detail": "service.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'hospital_management_backend.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]